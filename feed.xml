<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://ifuryst.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://ifuryst.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-10-27T13:58:42+00:00</updated><id>https://ifuryst.github.io/feed.xml</id><title type="html">ifuryst</title><subtitle>üìù &amp; üí≠ </subtitle><entry><title type="html">Resolving Option-Key Hotkey Issues in macOS Sequoia(15.0.1)</title><link href="https://ifuryst.github.io/blog/2024/resolving-option-key-hotkey-issues-in-macos-sequoia/" rel="alternate" type="text/html" title="Resolving Option-Key Hotkey Issues in macOS Sequoia(15.0.1)"/><published>2024-10-17T14:00:27+00:00</published><updated>2024-10-17T14:00:27+00:00</updated><id>https://ifuryst.github.io/blog/2024/resolving-option-key-hotkey-issues-in-macos-sequoia</id><content type="html" xml:base="https://ifuryst.github.io/blog/2024/resolving-option-key-hotkey-issues-in-macos-sequoia/"><![CDATA[<h1 id="background">Background</h1> <p>The MacOS Sequoia(15.0.1) will let the <code class="language-plaintext highlighter-rouge">Option+*</code> or <code class="language-plaintext highlighter-rouge">Option+Shift+*</code> no longer work. I believe a lot of guys like me use this to custom hotkeys or shortcuts.</p> <p>Apple‚Äôs official answer is that <a href="https://developer.apple.com/forums/thread/763878?answerId=804374022#804374022">this was an intentional change</a> for security purposes. We can see the discussion on <a href="https://www.reddit.com/r/macapps/comments/1fjpiiw/psa_macos_15_breaks_optionkey_hotkeys/">Reddit</a>. I don‚Äôt want to judge it here, just to provide a solution(or maybe a band-aid solution for someone or some situation.) to mitigate the issue.</p> <h1 id="solution-hammerspoon-and-retrigger-hotkey">Solution: Hammerspoon and retrigger hotkey</h1> <p>In the beginning, Thanks for <a href="https://www.reddit.com/r/macapps/comments/1fjpiiw/comment/lolslnm/?utm_source=share&amp;utm_medium=web3x&amp;utm_name=web3xcss&amp;utm_term=1&amp;utm_content=share_button">danrnx</a>‚Äôs reply, which enlightened me.</p> <p>My solution is using the <a href="https://www.hammerspoon.org/">Hammerspoon</a>, which is an alternative to the Keyboard Maestro to some extent.</p> <h2 id="installation">Installation</h2> <p>Here is a step-by-step tutorial:</p> <ol> <li>Install the Hammerspoon from release or brew. You can reference it <a href="https://github.com/Hammerspoon/hammerspoon?tab=readme-ov-file#how-do-i-install-it">here</a>.</li> <li>Write the lua(a programming language) for <code class="language-plaintext highlighter-rouge">~/.hammerspoon/init.lua</code>. You can reference the official guidance <a href="https://www.hammerspoon.org/go/">here</a>. I‚Äôll give some examples below.</li> </ol> <h2 id="configuration">Configuration</h2> <p>Remember to Reload Config after you change the <code class="language-plaintext highlighter-rouge">~/.hammerspoon/init.lua</code> .</p> <h3 id="demo-1-open-or-gain-focus-on-an-app">Demo 1: Open or gain focus on an App</h3> <p>It works well if you just need to define a hotkey to open or focus on an app.</p> <div class="language-lua highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">-- Define the hotkey for Option+C to gain an app's focus.</span>
<span class="n">hs</span><span class="p">.</span><span class="n">hotkey</span><span class="p">.</span><span class="n">bind</span><span class="p">({</span><span class="s2">"alt"</span><span class="p">},</span> <span class="s2">"C"</span><span class="p">,</span> <span class="k">function</span><span class="p">()</span>
  <span class="kd">local</span> <span class="n">currentApp</span> <span class="o">=</span> <span class="n">hs</span><span class="p">.</span><span class="n">application</span><span class="p">.</span><span class="n">frontmostApplication</span><span class="p">()</span>

  <span class="k">if</span> <span class="n">currentApp</span><span class="p">:</span><span class="n">name</span><span class="p">()</span> <span class="o">==</span> <span class="s2">"Google Chrome"</span> <span class="k">then</span>
    <span class="c1">-- Don't alert if already gained the focus.</span>
    <span class="k">return</span>
  <span class="k">else</span>
    <span class="n">hs</span><span class="p">.</span><span class="n">alert</span><span class="p">.</span><span class="n">show</span><span class="p">(</span><span class="s2">"Chrome"</span><span class="p">)</span>
    <span class="n">hs</span><span class="p">.</span><span class="n">application</span><span class="p">.</span><span class="n">launchOrFocus</span><span class="p">(</span><span class="s2">"Google Chrome"</span><span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span><span class="p">)</span>
</code></pre></div></div> <p>The following is an improved and more practical version of the above:</p> <div class="language-lua highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">function</span> <span class="nf">getBundleID</span><span class="p">(</span><span class="n">appName</span><span class="p">)</span>
  <span class="kd">local</span> <span class="n">app</span> <span class="o">=</span> <span class="n">hs</span><span class="p">.</span><span class="n">application</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="n">appName</span><span class="p">)</span>

  <span class="k">if</span> <span class="n">app</span> <span class="k">then</span>
    <span class="k">return</span> <span class="n">app</span><span class="p">:</span><span class="n">bundleID</span><span class="p">()</span>
  <span class="k">else</span>
    <span class="c1">-- If the application is not running, get it through the application path</span>
    <span class="kd">local</span> <span class="n">appPath</span> <span class="o">=</span> <span class="n">hs</span><span class="p">.</span><span class="n">application</span><span class="p">.</span><span class="n">pathForBundleID</span><span class="p">(</span><span class="n">appName</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">appPath</span> <span class="k">then</span>
      <span class="k">return</span> <span class="n">hs</span><span class="p">.</span><span class="n">application</span><span class="p">.</span><span class="n">infoForBundlePath</span><span class="p">(</span><span class="n">appPath</span><span class="p">).</span><span class="n">CFBundleIdentifier</span>
    <span class="k">else</span>
      <span class="n">hs</span><span class="p">.</span><span class="n">alert</span><span class="p">.</span><span class="n">show</span><span class="p">(</span><span class="s2">"Application not found: "</span> <span class="o">..</span> <span class="n">appName</span><span class="p">)</span>
      <span class="k">return</span> <span class="kc">nil</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
<span class="c1">-- A generic function to bind hotkeys and handle application launches or focus</span>
<span class="k">function</span> <span class="nf">bindAppHotkey</span><span class="p">(</span><span class="n">modifiers</span><span class="p">,</span> <span class="n">key</span><span class="p">,</span> <span class="n">appName</span><span class="p">)</span>
  <span class="kd">local</span> <span class="n">bundleID</span> <span class="o">=</span> <span class="n">getBundleID</span><span class="p">(</span><span class="n">appName</span><span class="p">)</span>

  <span class="k">if</span> <span class="ow">not</span> <span class="n">bundleID</span> <span class="k">then</span>
    <span class="k">return</span>
  <span class="k">end</span>

  <span class="n">hs</span><span class="p">.</span><span class="n">hotkey</span><span class="p">.</span><span class="n">bind</span><span class="p">(</span><span class="n">modifiers</span><span class="p">,</span> <span class="n">key</span><span class="p">,</span> <span class="k">function</span><span class="p">()</span>
    <span class="kd">local</span> <span class="n">currentApp</span> <span class="o">=</span> <span class="n">hs</span><span class="p">.</span><span class="n">application</span><span class="p">.</span><span class="n">frontmostApplication</span><span class="p">()</span>

    <span class="k">if</span> <span class="n">currentApp</span><span class="p">:</span><span class="n">bundleID</span><span class="p">()</span> <span class="o">==</span> <span class="n">bundleID</span> <span class="k">then</span>
      <span class="k">return</span>
    <span class="k">else</span>
      <span class="kd">local</span> <span class="n">appIcon</span> <span class="o">=</span> <span class="n">hs</span><span class="p">.</span><span class="n">image</span><span class="p">.</span><span class="n">imageFromAppBundle</span><span class="p">(</span><span class="n">bundleID</span><span class="p">)</span>

      <span class="c1">-- Create a canvas to display the icon</span>
      <span class="kd">local</span> <span class="n">iconCanvas</span> <span class="o">=</span> <span class="n">hs</span><span class="p">.</span><span class="n">canvas</span><span class="p">.</span><span class="n">new</span><span class="p">{</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">h</span> <span class="o">=</span> <span class="mi">100</span><span class="p">,</span> <span class="n">w</span> <span class="o">=</span> <span class="mi">100</span> <span class="p">}:</span><span class="n">appendElements</span><span class="p">({</span>
        <span class="nb">type</span> <span class="o">=</span> <span class="s2">"image"</span><span class="p">,</span>
        <span class="n">image</span> <span class="o">=</span> <span class="n">appIcon</span><span class="p">,</span>
        <span class="n">imageAlignment</span> <span class="o">=</span> <span class="s2">"center"</span><span class="p">,</span>
        <span class="n">imageScaling</span> <span class="o">=</span> <span class="s2">"scaleToFit"</span>
      <span class="p">})</span>

      <span class="c1">-- Get the screen center position to display the canvas</span>
      <span class="kd">local</span> <span class="n">screenFrame</span> <span class="o">=</span> <span class="n">hs</span><span class="p">.</span><span class="n">screen</span><span class="p">.</span><span class="n">mainScreen</span><span class="p">():</span><span class="n">frame</span><span class="p">()</span>
      <span class="n">iconCanvas</span><span class="p">:</span><span class="n">frame</span><span class="p">({</span>
        <span class="n">x</span> <span class="o">=</span> <span class="n">screenFrame</span><span class="p">.</span><span class="n">w</span> <span class="o">/</span> <span class="mi">2</span> <span class="o">-</span> <span class="mi">50</span><span class="p">,</span>
        <span class="n">y</span> <span class="o">=</span> <span class="n">screenFrame</span><span class="p">.</span><span class="n">h</span> <span class="o">/</span> <span class="mi">2</span> <span class="o">-</span> <span class="mi">50</span><span class="p">,</span>
        <span class="n">h</span> <span class="o">=</span> <span class="mi">100</span><span class="p">,</span>
        <span class="n">w</span> <span class="o">=</span> <span class="mi">100</span>
      <span class="p">})</span>

      <span class="c1">-- Show the icon and automatically delete it after 1 second</span>
      <span class="n">iconCanvas</span><span class="p">:</span><span class="n">show</span><span class="p">()</span>
      <span class="n">hs</span><span class="p">.</span><span class="n">timer</span><span class="p">.</span><span class="n">doAfter</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="k">function</span><span class="p">()</span> <span class="n">iconCanvas</span><span class="p">:</span><span class="n">delete</span><span class="p">()</span> <span class="k">end</span><span class="p">)</span>

      <span class="c1">-- Launch or focus the application</span>
      <span class="n">hs</span><span class="p">.</span><span class="n">application</span><span class="p">.</span><span class="n">launchOrFocus</span><span class="p">(</span><span class="n">appName</span><span class="p">)</span>
    <span class="k">end</span>
  <span class="k">end</span><span class="p">)</span>
<span class="k">end</span>

<span class="c1">-- Use the generic function to set hotkeys for different applications</span>
<span class="n">bindAppHotkey</span><span class="p">({</span><span class="s2">"alt"</span><span class="p">},</span> <span class="s2">"C"</span><span class="p">,</span> <span class="s2">"Google Chrome"</span><span class="p">)</span>
<span class="n">bindAppHotkey</span><span class="p">({</span><span class="s2">"alt"</span><span class="p">},</span> <span class="s2">"S"</span><span class="p">,</span> <span class="s2">"Sublime Text"</span><span class="p">)</span>
<span class="n">bindAppHotkey</span><span class="p">({</span><span class="s2">"alt"</span><span class="p">},</span> <span class="s2">"space"</span><span class="p">,</span> <span class="s2">"iTerm"</span><span class="p">)</span>
</code></pre></div></div> <p>I‚Äôd like to show the app icon rather than the app name :)</p> <h3 id="demo-2-retrigger">Demo 2: Retrigger</h3> <p>Sometimes we‚Äôd like to use functions such as screenshots, OCR, or translation. They‚Äôre different from opening an app. So we can use a hotkey to trigger another hotkey.</p> <div class="language-lua highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">hs</span><span class="p">.</span><span class="n">hotkey</span><span class="p">.</span><span class="n">bind</span><span class="p">({</span><span class="s2">"alt"</span><span class="p">},</span> <span class="s2">"A"</span><span class="p">,</span> <span class="k">function</span><span class="p">()</span>
  <span class="n">hs</span><span class="p">.</span><span class="n">eventtap</span><span class="p">.</span><span class="n">keyStroke</span><span class="p">({</span><span class="s2">"alt"</span><span class="p">,</span> <span class="s2">"cmd"</span><span class="p">},</span> <span class="s2">"A"</span><span class="p">)</span>
<span class="k">end</span><span class="p">)</span>
</code></pre></div></div> <p>I define the screenshot hotkey as <code class="language-plaintext highlighter-rouge">Option+Command+A</code>, and then bind the <code class="language-plaintext highlighter-rouge">Option+A</code> in Hammerspoon. Now, I can take a screenshot by <code class="language-plaintext highlighter-rouge">Option+A</code> .</p> <h1 id="references">References</h1> <ul> <li><a href="https://www.reddit.com/r/macapps/comments/1fjpiiw/psa_macos_15_breaks_optionkey_hotkeys/">https://www.reddit.com/r/macapps/comments/1fjpiiw/psa_macos_15_breaks_optionkey_hotkeys/</a></li> <li><a href="https://developer.apple.com/forums/thread/763878?answerId=804374022#804374022">https://developer.apple.com/forums/thread/763878?answerId=804374022#804374022</a></li> <li><a href="https://www.hammerspoon.org/">https://www.hammerspoon.org/</a></li> </ul>]]></content><author><name></name></author><category term="Tricks"/><category term="MacOS"/><summary type="html"><![CDATA[Background]]></summary></entry><entry><title type="html">zsh nice 5 üßê. How the nice value disturb the‚Ä¶ | by ifuryst | Medium</title><link href="https://ifuryst.github.io/blog/2024/zsh-nice-5-how-the-nice-value-disturb-the-by-ifuryst-medium/" rel="alternate" type="text/html" title="zsh nice 5 üßê. How the nice value disturb the‚Ä¶ | by ifuryst | Medium"/><published>2024-08-07T00:00:00+00:00</published><updated>2024-08-07T00:00:00+00:00</updated><id>https://ifuryst.github.io/blog/2024/zsh-nice-5--how-the-nice-value-disturb-the--by-ifuryst--medium</id><content type="html" xml:base="https://ifuryst.github.io/blog/2024/zsh-nice-5-how-the-nice-value-disturb-the-by-ifuryst-medium/"><![CDATA[]]></content><author><name></name></author><category term="linux"/><category term="casual-tech"/><summary type="html"><![CDATA[Today, I was troubleshooting an issue with a service‚Äôs throughput during a stress test. While observing the CPU usage, I paid attention not only to the process‚Äôs CPU consumption but also to the usage‚Ä¶]]></summary></entry><entry><title type="html">TCP congestion control. Statement!!! | by ifuryst | Medium</title><link href="https://ifuryst.github.io/blog/2024/tcp-congestion-control-statement-by-ifuryst-medium/" rel="alternate" type="text/html" title="TCP congestion control. Statement!!! | by ifuryst | Medium"/><published>2024-03-12T00:00:00+00:00</published><updated>2024-03-12T00:00:00+00:00</updated><id>https://ifuryst.github.io/blog/2024/tcp-congestion-control-statement--by-ifuryst--medium</id><content type="html" xml:base="https://ifuryst.github.io/blog/2024/tcp-congestion-control-statement-by-ifuryst-medium/"><![CDATA[]]></content><author><name></name></author><category term="TCP"/><category term="networking"/><summary type="html"><![CDATA[I am sharing a draft article from a field I no longer focus on but believe the insights within are too valuable not to share. Please note, this manuscript is presented as-is :) All of these‚Ä¶]]></summary></entry></feed>